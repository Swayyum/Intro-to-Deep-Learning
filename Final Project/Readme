# Automated Parking Lot Occupancy Detection with Semantic Segmentation

## Project Overview
This project implements a semantic segmentation model to detect parking lot occupancy using a deep learning approach. The model processes images of parking lots and identifies whether parking spaces are occupied or vacant. The primary goal is to enable real-time parking space detection for smart parking management systems.

The project leverages the **PKLot dataset**, consisting of 12,000 labeled images of parking lots in various conditions, such as different weather, lighting, and occupancy scenarios. The segmentation task involves classifying pixels into categories representing vehicles and parking spaces.

The models used for this project include:
- **Semantics CNN**
- **U-Net**
- **Vision Transformer**
- **Modified ResNet**

### Key Features
- **High Precision**: The model achieves up to **99.91% precision**, making it highly accurate for detecting parking occupancy.
- **Robustness**: The system handles challenging environments, such as changes in weather and lighting conditions.
- **Real-time Capabilities**: Designed for real-time parking space monitoring and management.

## Models and Architecture
1. **Semantics CNN**: A convolutional neural network specialized for pixel-wise classification.
2. **U-Net**: A fully convolutional neural network (FCN) known for semantic segmentation, with a U-shaped architecture that facilitates precise pixel classification.
3. **Vision Transformer**: A transformer-based model that handles image segmentation by considering long-range dependencies.
4. **Modified ResNet**: A customized version of the ResNet architecture adapted for semantic segmentation tasks, with modifications to the skip connections and output layers.

### Dataset
The **PKLot dataset** is used for training and testing the models. The dataset consists of:
- **12,000 images** captured from various parking lots.
- Labels include **occupied** and **vacant** parking spaces.
- The dataset includes diverse conditions such as **rainy, sunny**, and **cloudy weather** to ensure robustness across different scenarios.

### Performance Metrics
To assess the effectiveness of the models, the following metrics are employed:
- **Precision**
- **Recall**
- **Intersection over Union (IoU)**
- **F1-Score**

The models were evaluated and compared based on these metrics, with the **U-Net** and **Vision Transformer** architectures performing exceptionally well in both precision and recall.

## Installation & Setup

### Prerequisites
- Python 3.8+
- TensorFlow or PyTorch (for model implementation)
- OpenCV (for image preprocessing)
- NumPy
- Matplotlib (for visualization)
- Scikit-learn (for evaluation metrics)

### Clone the Repository
```bash
git clone https://github.com/Swayyum/Intro-to-Deep-Learning/tree/master/Final%20Project
cd parking-lot-detection
